# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
#
# When uploading crates to the registry Cargo will automatically
# "normalize" Cargo.toml files for maximal compatibility
# with all versions of Cargo and also rewrite `path` dependencies
# to registry (e.g., crates.io) dependencies
#
# If you believe there's an error in this file please file an
# issue against the rust-lang/cargo repository. If you're
# editing this file be aware that the upstream Cargo.toml
# will likely look very different (and much more reasonable)

[package]
name = "cpal"
version = "0.12.1"
authors = ["The CPAL contributors", "Pierre Krieger <pierre.krieger1708@gmail.com>"]
description = "Low-level cross-platform audio I/O library in pure Rust."
documentation = "https://docs.rs/cpal"
keywords = ["audio", "sound"]
license = "Apache-2.0"
repository = "https://github.com/rustaudio/cpal"
[dependencies.thiserror]
version = "1.0.2"
[dev-dependencies.anyhow]
version = "1.0.12"

[dev-dependencies.hound]
version = "3.4"

[dev-dependencies.ringbuf]
version = "0.1.6"

[features]
asio = ["asio-sys", "num-traits"]
[target."cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))".dependencies.js-sys]
version = "0.3.35"

[target."cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))".dependencies.wasm-bindgen]
version = "0.2.58"
optional = true

[target."cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))".dependencies.web-sys]
version = "0.3.35"
features = ["AudioContext", "AudioContextOptions", "AudioBuffer", "AudioBufferSourceNode", "AudioNode", "AudioDestinationNode", "Window", "AudioContextState"]
[target."cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\"))".dependencies.alsa]
version = "0.4.1"

[target."cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\"))".dependencies.libc]
version = "0.2.65"

[target."cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\"))".dependencies.nix]
version = "0.15.0"
[target."cfg(any(target_os = \"macos\", target_os = \"ios\"))".dependencies.core-foundation-sys]
version = "0.6.2"

[target."cfg(any(target_os = \"macos\", target_os = \"ios\"))".dependencies.coreaudio-rs]
version = "0.9.1"
features = ["audio_unit", "core_audio"]
default-features = false

[target."cfg(any(target_os = \"macos\", target_os = \"ios\"))".dependencies.mach]
version = "0.3"
[target."cfg(target_os = \"emscripten\")".dependencies.stdweb]
version = "0.1.3"
default-features = false
[target."cfg(target_os = \"windows\")".dependencies.asio-sys]
version = "0.2"
optional = true

[target."cfg(target_os = \"windows\")".dependencies.lazy_static]
version = "1.3"

[target."cfg(target_os = \"windows\")".dependencies.num-traits]
version = "0.2.6"
optional = true

[target."cfg(target_os = \"windows\")".dependencies.parking_lot]
version = "0.9"

[target."cfg(target_os = \"windows\")".dependencies.winapi]
version = "0.3"
features = ["audiosessiontypes", "audioclient", "coml2api", "combaseapi", "debug", "devpkey", "handleapi", "ksmedia", "mmdeviceapi", "objbase", "profileapi", "std", "synchapi", "winbase", "winuser"]
